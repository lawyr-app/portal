"use client";

import { useState } from "react";
import { Check, X } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Switch } from "@/components/ui/switch";

const plans = [
  {
    name: "Free",
    price: "₹0",
    duration: "forever",
    description: "Get started with basic legal assistance.",
    features: [
      "5 legal queries per month",
      "Access to basic legal topics",
      "Standard response time",
      "Community support",
    ],

    cta: "Start Free",
  },
  {
    name: "Basic",
    monthlyPrice: "₹999",
    annualPrice: "₹9,990",
    duration: "per month",
    description: "Perfect for individuals and small businesses.",
    features: [
      "50 legal queries per month",
      "Access to common legal topics",
      "24/7 availability",
      "Email support",
      "Basic document review (up to 5 pages/month)",
    ],

    cta: "Get Started",
  },
  {
    name: "Pro",
    monthlyPrice: "₹2,499",
    annualPrice: "₹24,990",
    duration: "per month",
    description: "Ideal for businesses with complex legal needs.",
    features: [
      "Unlimited legal queries",
      "Access to all legal topics",
      "Priority response time",
      "24/7 availability",
      "Email and chat support",
      "Advanced document review (up to 20 pages/month)",
      "Customized AI training on specific legal areas",
    ],

    cta: "Go Pro",
    featured: true,
  },
];

const featureComparison = [
  {
    feature: "Legal Queries per Month",
    free: "5",
    basic: "50",
    pro: "Unlimited",
  },
  {
    feature: "Access to Common Legal Topics",
    free: true,
    basic: true,
    pro: true,
  },
  {
    feature: "Access to All Legal Topics",
    free: false,
    basic: false,
    pro: true,
  },
  { feature: "24/7 Availability", free: true, basic: true, pro: true },
  {
    feature: "Response Time",
    free: "Standard",
    basic: "Standard",
    pro: "Priority",
  },
  { feature: "Email Support", free: false, basic: true, pro: true },
  { feature: "Chat Support", free: false, basic: false, pro: true },
  {
    feature: "Document Review",
    free: false,
    basic: "Up to 5 pages/month",
    pro: "Up to 20 pages/month",
  },
  { feature: "API Access", free: false, basic: false, pro: true },
];

export default function Pricing() {
  const [isAnnual, setIsAnnual] = useState(false);

  return (
    <section className="py-20 " >
      <div
        className="container mx-auto px-4 sm:px-6 lg:px-8"
        
      >
        <h2
          className="text-4xl font-extrabold text-center mb-4 text-black dark:text-white"
          
        >
          Choose Your Plan
        </h2>
        <p
          className="text-xl text-center mb-12 text-gray-600 dark:text-gray-400"
          
        >
          Select the perfect plan for your legal needs
        </p>

        <div
          className="flex items-center justify-center mb-12"
          
        >
          <span
            className={`mr-3 text-lg ${
              isAnnual
                ? "text-gray-500 dark:text-gray-400"
                : "text-black dark:text-white font-semibold"
            }`}
            
          >
            Monthly
          </span>
          <Switch
            checked={isAnnual}
            onCheckedChange={setIsAnnual}
            className="data-[state=checked]:bg-black dark:data-[state=checked]:bg-white"
            
          />

          <span
            className={`ml-3 text-lg ${
              isAnnual
                ? "text-black dark:text-white font-semibold"
                : "text-gray-500 dark:text-gray-400"
            }`}
            
          >
            Annual
          </span>
          <span
            className="ml-2 text-sm text-green-500 font-medium"
            
          >
            Save 20%
          </span>
        </div>

        <div
          className="grid grid-cols-1 md:grid-cols-3 gap-8 mb-16"
          
        >
          {plans.map((plan, index) => (
            <div
              key={index}
              className={`bg-card rounded-2xl shadow-xl overflow-hidden transform transition-all duration-300 hover:scale-105 ${
                plan.featured
                  ? "ring-4 ring-black dark:ring-white md:scale-105"
                  : ""
              }`}
              
            >
              <div className="p-8" >
                <h3
                  className="text-2xl font-bold mb-2 text-black dark:text-white"
                  
                >
                  {plan.name}
                </h3>
                <p
                  className="text-gray-600 dark:text-gray-400 mb-6"
                  
                >
                  {plan.description}
                </p>
                <div className="mb-6" >
                  <span
                    className="text-5xl font-bold text-black dark:text-white"
                    
                  >
                    {plan.name === "Free"
                      ? plan.price
                      : isAnnual
                        ? plan.annualPrice
                        : plan.monthlyPrice}
                  </span>
                  <span
                    className="text-xl text-gray-600 dark:text-gray-400"
                    
                  >
                    {plan.name === "Free"
                      ? plan.duration
                      : isAnnual
                        ? "/year"
                        : "/month"}
                  </span>
                </div>
                <ul className="mb-8 space-y-4" >
                  {plan.features.map((feature, featureIndex) => (
                    <li
                      key={featureIndex}
                      className="flex items-start"
                      
                    >
                      <Check
                        className="w-5 h-5 mr-3 text-green-500 mt-1 flex-shrink-0"
                        
                      />
                      <span
                        className="text-gray-600 dark:text-gray-300"
                        
                      >
                        {feature}
                      </span>
                    </li>
                  ))}
                </ul>
                <Button
                  className="w-full text-lg py-3 bg-black text-white dark:bg-white dark:text-black hover:bg-gray-800 dark:hover:bg-gray-200 transition-colors duration-300"
                  
                >
                  {plan.cta}
                </Button>
              </div>
            </div>
          ))}
        </div>

        <h3
          className="text-2xl font-bold text-center mb-6 text-black dark:text-white"
          
        >
          Feature Comparison
        </h3>
        <div className="overflow-x-auto" >
          <table
            className="w-full max-w-4xl mx-auto bg-white dark:bg-gray-800 shadow-lg rounded-lg overflow-hidden"
            
          >
            <thead className="bg-card" >
              <tr >
                <th
                  className="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider"
                  
                >
                  Feature
                </th>
                <th
                  className="px-6 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider"
                  
                >
                  Free
                </th>
                <th
                  className="px-6 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider"
                  
                >
                  Basic
                </th>
                <th
                  className="px-6 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider"
                  
                >
                  Pro
                </th>
              </tr>
            </thead>
            <tbody className="divide-y " >
              {featureComparison.map((row, index) => (
                <tr
                  key={index}
                  className="bg-card"
                  // className={
                  //   index % 2 === 0
                  //     ? "bg-gray-50 dark:bg-stone-900"
                  //     : "bg-white dark:bg-stone-950"
                  // }
                  
                >
                  <td
                    className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white"
                    
                  >
                    {row.feature}
                  </td>
                  <td
                    className="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300 text-center"
                    
                  >
                    {typeof row.free === "boolean" ? (
                      row.free ? (
                        <Check
                          className="inline-block w-5 h-5 text-green-500"
                          
                        />
                      ) : (
                        <X
                          className="inline-block w-5 h-5 text-red-500"
                          
                        />
                      )
                    ) : (
                      row.free
                    )}
                  </td>
                  <td
                    className="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300 text-center"
                    
                  >
                    {typeof row.basic === "boolean" ? (
                      row.basic ? (
                        <Check
                          className="inline-block w-5 h-5 text-green-500"
                          
                        />
                      ) : (
                        <X
                          className="inline-block w-5 h-5 text-red-500"
                          
                        />
                      )
                    ) : (
                      row.basic
                    )}
                  </td>
                  <td
                    className="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-300 text-center"
                    
                  >
                    {typeof row.pro === "boolean" ? (
                      row.pro ? (
                        <Check
                          className="inline-block w-5 h-5 text-green-500"
                          
                        />
                      ) : (
                        <X
                          className="inline-block w-5 h-5 text-red-500"
                          
                        />
                      )
                    ) : (
                      row.pro
                    )}
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </section>
  );
}
